{"version":3,"sources":["components/Field/field.module.scss","components/Canvas/canvas.module.scss","types.ts","store/store.ts","consts.ts","utils.ts","components/Field/Field.tsx","components/Canvas/Canvas.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","FigureType","ActionTypes","addFigure","figure","type","ADD_FIGURE","payload","removeFigure","id","REMOVE_FIGURE","changeFigure","CHANGE_FIGURE","rootReducer","combineReducers","figures","state","action","storage","localStorage","getItem","result","JSON","parse","concat","filter","newState","forEach","element","index","setItem","stringify","CONSTS","getMaxLayer","layer","map","sort","a","b","findFigure","Field","fileInput","useRef","target","Square","oldCoords","x","y","delta","dispatch","useDispatch","useSelector","handleMouseMove","e","preventDefault","style","left","clientX","top","clientY","handleMouseDown","figureType","window","addEventListener","handleMouseUp","innerWidth","innerHeight","uniqid","position","color","randomcolor","isActive","zIndex","removeEventListener","item","bounds","getBoundingClientRect","clearAll","list","className","styles","field","cell","classnames","square","hidden","onMouseDown","circle","Circle","controls","import_input","ref","onChange","current","files","reader","FileReader","event","readAsText","clear_button","onClick","confirm","title","export_button","json","blob","Blob","FileSaver","saveAs","import_label","htmlFor","Canvas","tempIndex","useState","items","setItems","handleDelete","key","getActive","useEffect","document","backgroundColor","border","handleClick","unfocusAll","addWidth","offsetWidth","addHeight","offsetHeight","offsetLeft","offsetTop","stopPropagation","canvas","App","Boolean","location","hostname","match","store","createStore","undefined","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.411ea0e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"field_field__ZYsVG\",\"cell\":\"field_cell__30Y6X\",\"item\":\"field_item__2NMY8\",\"hidden\":\"field_hidden__uZkJA\",\"circle\":\"field_circle__3WBZY\",\"controls\":\"field_controls__5cEPM\",\"clear_button\":\"field_clear_button__2WEHu\",\"export_button\":\"field_export_button__eB4I3\",\"import_label\":\"field_import_label__3zkyZ\",\"import_input\":\"field_import_input__3-aLR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"canvas_canvas__37gIx\",\"item\":\"canvas_item__VevbL\",\"circle\":\"canvas_circle__2zge0\"};","import {addFigure, changeFigure, removeFigure} from \"./store/store\";\r\n\r\nexport type AppState = {\r\n    figures: Figure[];\r\n};\r\n\r\nexport type Actions =\r\n    | ReturnType<typeof addFigure>\r\n    | ReturnType<typeof removeFigure>\r\n    | ReturnType<typeof changeFigure>;\r\n\r\nexport enum FigureType {\r\n    Square,\r\n    Circle\r\n}\r\n\r\nexport type Figure = {\r\n    id: string,\r\n    type: FigureType;\r\n    layer: number;\r\n    position: {\r\n        x: number,\r\n        y: number\r\n    },\r\n    color: string,\r\n    isActive: boolean\r\n}\r\n\r\nexport enum ActionTypes {\r\n    ADD_FIGURE,\r\n    REMOVE_FIGURE,\r\n    CHANGE_FIGURE\r\n}\r\n\r\nexport type FigureAction = {\r\n    type: ActionTypes\r\n    figure: Figure\r\n}","import {Actions, ActionTypes, AppState, Figure} from \"../types\";\r\nimport {combineReducers, createStore, Store} from \"redux\";\r\n\r\nexport function addFigure(figure: Figure) {\r\n    return {\r\n        type: ActionTypes.ADD_FIGURE,\r\n        payload: figure,\r\n    } as const;\r\n}\r\n\r\nexport function removeFigure(id: string) {\r\n    return {\r\n        type: ActionTypes.REMOVE_FIGURE,\r\n        payload: id,\r\n    } as const;\r\n}\r\n\r\nexport function changeFigure(figure: Figure) {\r\n    return {\r\n        type: ActionTypes.CHANGE_FIGURE,\r\n        payload: figure,\r\n    } as const;\r\n}\r\n\r\nfunction reducer(\r\n    state: Figure[] = [],\r\n    action: Actions\r\n) {\r\n    const storage = localStorage.getItem('figures');\r\n    let result = storage ? JSON.parse(storage) as Figure[] : [];\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_FIGURE:\r\n            result = state.concat(action.payload);\r\n            break;\r\n        case ActionTypes.REMOVE_FIGURE:\r\n            result = state.filter(\r\n                (figure) => figure.id !== action.payload\r\n            );\r\n            break;\r\n        case ActionTypes.CHANGE_FIGURE: {\r\n            const newState = [...state];\r\n            newState.forEach((element, index) => {\r\n                if (element.id === action.payload.id) {\r\n                    state[index] = action.payload;\r\n                }\r\n            });\r\n            result = newState;\r\n            break;\r\n        }\r\n    }\r\n    localStorage.setItem('figures', JSON.stringify(result));\r\n    return result;\r\n}\r\n\r\nconst rootReducer = combineReducers<AppState>({\r\n    figures: reducer\r\n});\r\n\r\nexport function configureStore(): Store<AppState> {\r\n    const store = createStore(\r\n        rootReducer, undefined\r\n    );\r\n    return store;\r\n}","export const CONSTS = {\r\n    UPPER_LAYER: 999,\r\n    DEFAULT_LAYER: 1,\r\n    MENU_WIDTH: 200,\r\n    ACTIVE_BORDER: '4px solid #00000066',\r\n}","import {Figure} from \"./types\";\r\n\r\nexport const getMaxLayer = (figures: Figure[]) => {\r\n    const layer = figures.map(figure => figure.layer).sort((a, b) => b - a)[0] + 1\r\n    return layer ? layer : 0;\r\n}\r\n\r\nexport const findFigure = (figures: Figure[], id: string) => {\r\n    return figures.filter(figure => figure.id === id)[0];\r\n}\r\n\r\nexport const getActive = (figures: Figure[]) => {\r\n    return figures.filter(figure => figure.isActive === true)[0];\r\n}","import React, {useRef} from 'react';\r\nimport classnames from 'classnames';\r\nimport styles from './field.module.scss';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppState, Figure, FigureType} from \"../../types\";\r\nimport {addFigure, removeFigure} from \"../../store/store\";\r\nimport uniqid from 'uniqid';\r\nimport {CONSTS} from \"../../consts\";\r\nimport randomcolor from 'randomcolor';\r\nimport {getMaxLayer} from \"../../utils\";\r\nimport FileSaver from \"file-saver\";\r\n\r\nconst Field = () => {\r\n    const fileInput = useRef<HTMLInputElement>(null);\r\n    let target: HTMLElement | null = null;\r\n    let type: FigureType = FigureType.Square;\r\n    let oldCoords = {\r\n        x: 0, y: 0\r\n    }\r\n    let delta = {\r\n        x: 0, y: 0\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const figures: Figure[] = useSelector(\r\n        (state: AppState) => state.figures\r\n    );\r\n\r\n    const handleMouseMove = (e: MouseEvent) => {\r\n        e.preventDefault();\r\n        if (target) {\r\n            target.style.left = `${e.clientX - oldCoords.x}px`;\r\n            target.style.top = `${e.clientY - oldCoords.y}px`;\r\n        }\r\n    }\r\n\r\n    const handleMouseUp = (e: MouseEvent) => {\r\n        if (target) {\r\n            if (e.clientX > CONSTS.MENU_WIDTH + delta.x && e.clientX < window.innerWidth - delta.x\r\n                && e.clientY > delta.y && e.clientY < window.innerHeight - delta.y) {\r\n                dispatch(addFigure({\r\n                    id: uniqid(),\r\n                    type: type,\r\n                    position: {\r\n                        x: e.clientX - delta.x,\r\n                        y: e.clientY - delta.y\r\n                    },\r\n                    layer: getMaxLayer(figures),\r\n                    color: randomcolor(),\r\n                    isActive: false\r\n                }));\r\n            }\r\n            target.style.zIndex = `${CONSTS.DEFAULT_LAYER}`;\r\n            target.style.left = '0';\r\n            target.style.top = '0';\r\n        }\r\n        window.removeEventListener('mousemove', handleMouseMove);\r\n        window.removeEventListener('mouseup', handleMouseUp);\r\n        target = null;\r\n    }\r\n\r\n    const handleMouseDown = (e: React.MouseEvent, figureType: FigureType) => {\r\n        window.addEventListener('mousemove', (e) => handleMouseMove(e));\r\n        window.addEventListener('mouseup', (e) => handleMouseUp(e));\r\n        type = figureType;\r\n        const item = e.target as HTMLDivElement;\r\n        if (item) {\r\n            const bounds = item.getBoundingClientRect();\r\n            oldCoords.x = e.clientX;\r\n            oldCoords.y = e.clientY;\r\n            delta.x = oldCoords.x - bounds.x;\r\n            delta.y = oldCoords.y - bounds.y;\r\n            item.style.zIndex = `${CONSTS.UPPER_LAYER}`;\r\n            if (!target) target = item;\r\n        }\r\n    }\r\n\r\n    const clearAll = () => {\r\n        const list = [...figures];\r\n        for (let item of list) {\r\n            dispatch(removeFigure(item.id));\r\n        }\r\n    }\r\n\r\n    const handleClear = () => {\r\n        const result = window.confirm('Are you sure?');\r\n        result && clearAll();\r\n    }\r\n\r\n    const handleExport = () => {\r\n        const json = JSON.stringify(figures);\r\n        const blob = new Blob([json], {type: \"text/plain;charset=utf-8\"});\r\n        FileSaver.saveAs(blob, 'kanva.json');\r\n    }\r\n\r\n    const handleImport = () => {\r\n        if (fileInput.current) {\r\n            const files = fileInput.current.files;\r\n            if (files) {\r\n                const reader = new FileReader();\r\n                reader.addEventListener('load', (event) => {\r\n                    const result = event.target?.result as string;\r\n                    const figures = JSON.parse(result) as Figure[];\r\n                    clearAll();\r\n                    for (let figure of figures) {\r\n                        dispatch(addFigure(figure));\r\n                    }\r\n                });\r\n                reader.readAsText(files[0]);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className={styles.field}>\r\n            <ul>\r\n                <li className={styles.cell}>\r\n                    <div className={classnames(styles.item, styles.square, styles.hidden)}></div>\r\n                    <div\r\n                        onMouseDown={(e) => handleMouseDown(e, FigureType.Square)}\r\n                        className={classnames(styles.item, styles.square)}></div>\r\n                </li>\r\n                <li className={styles.cell}>\r\n                    <div className={classnames(styles.item, styles.circle, styles.hidden)}></div>\r\n                    <div\r\n                        onMouseDown={(e) => handleMouseDown(e, FigureType.Circle)}\r\n                        className={classnames(styles.item, styles.circle)}></div>\r\n                </li>\r\n            </ul>\r\n            <ul className={styles.controls}>\r\n                <input className={styles.import_input} id=\"import_input\" type=\"file\" ref={fileInput} onChange={handleImport}/>\r\n                <li className={styles.clear_button} onClick={handleClear} title=\"Delete all elements\"></li>\r\n                <li className={styles.export_button} onClick={handleExport} title=\"Export file\"></li>\r\n                <li title=\"Import file\">\r\n                    <label className={styles.import_label} htmlFor=\"import_input\"></label>\r\n                </li>\r\n            </ul>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Field;","import React, {useEffect, useState} from 'react';\r\nimport styles from './canvas.module.scss';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppState, Figure, FigureType} from \"../../types\";\r\nimport {changeFigure, removeFigure} from \"../../store/store\";\r\nimport classnames from 'classnames';\r\nimport {CONSTS} from \"../../consts\";\r\nimport {findFigure, getActive, getMaxLayer} from \"../../utils\";\r\n\r\nconst Canvas = () => {\r\n\r\n    let tempIndex = 0;\r\n    let target: HTMLElement | null = null;\r\n    let oldCoords = {\r\n        x: 0, y: 0\r\n    }\r\n    let delta = {\r\n        x: 0, y: 0\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const figures: Figure[] = useSelector(\r\n        (state: AppState) => state.figures\r\n    );\r\n\r\n    const [items, setItems] = useState<JSX.Element[]>([]);\r\n\r\n    const handleDelete = (e: KeyboardEvent) => {\r\n        if (e.key === 'Delete') {\r\n            const figure = getActive(figures);\r\n            figure && dispatch(removeFigure(figure.id));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleDelete, false);\r\n        setItems(figures.map((figure) => {\r\n            const type = figure.type === FigureType.Square ? 'square' : 'circle';\r\n            const style = {\r\n                left: figure.position.x - CONSTS.MENU_WIDTH,\r\n                top: figure.position.y,\r\n                zIndex: figure.layer,\r\n                backgroundColor: figure.color,\r\n                border: figure.isActive ? CONSTS.ACTIVE_BORDER : ''\r\n            }\r\n            return (\r\n                <div\r\n                    id={figure.id}\r\n                    key={figure.id}\r\n                    className={classnames(styles.item, styles[type])}\r\n                    style={style}\r\n                    onMouseDown={(e) => handleMouseDown(e)}\r\n                    onClick={(e) => handleClick(e)}>\r\n                </div>\r\n            )\r\n        }));\r\n        return () => document.removeEventListener('keydown',  handleDelete, false);\r\n    }, [figures])\r\n\r\n    const unfocusAll = () => {\r\n        const list = [...figures];\r\n        for (let item of list) {\r\n            item.isActive = false;\r\n            dispatch(changeFigure(item));\r\n        }\r\n    }\r\n\r\n    const handleClick = (e: React.MouseEvent) => {\r\n        const item = e.target as HTMLDivElement;\r\n        const figure = findFigure(figures, item.id);\r\n        figure.isActive = true;\r\n        dispatch(changeFigure(figure));\r\n    };\r\n\r\n    const handleMouseMove = (e: MouseEvent) => {\r\n        e.preventDefault();\r\n        if (target) {\r\n            const addWidth = CONSTS.MENU_WIDTH + target.offsetWidth;\r\n            const addHeight = target.offsetHeight;\r\n            target.style.left = `${e.clientX - delta.x - CONSTS.MENU_WIDTH}px`;\r\n            target.style.top = `${e.clientY - delta.y}px`;\r\n            if (e.clientX >= CONSTS.MENU_WIDTH && e.clientX <= window.innerWidth\r\n                && e.clientY >= 0 && e.clientY <= window.innerHeight) {\r\n                if (target.offsetLeft < 0) target.style.left = '0';\r\n                if (target.offsetTop < 0) target.style.top = '0';\r\n                if (target.offsetLeft > window.innerWidth - addWidth) target.style.left = `${window.innerWidth - addWidth}px`;\r\n                if (target.offsetTop > window.innerHeight - addHeight) target.style.top = `${window.innerHeight - addHeight}px`;\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleMouseUp = (e: MouseEvent) => {\r\n        window.removeEventListener('mousemove', handleMouseMove);\r\n        window.removeEventListener('mouseup', handleMouseUp);\r\n        const item = e.target as HTMLDivElement;\r\n        item.style.zIndex = `${tempIndex}`;\r\n        const figure = findFigure(figures, item.id);\r\n        if (figure) {\r\n            figure.position = {\r\n                x: item.offsetLeft + CONSTS.MENU_WIDTH,\r\n                y: item.offsetTop\r\n            };\r\n            dispatch(changeFigure(figure));\r\n        }\r\n        if (target && (e.clientX < CONSTS.MENU_WIDTH || e.clientX > window.innerWidth\r\n            || e.clientY < 0 || e.clientY > window.innerHeight)) {\r\n            dispatch(removeFigure(target.id));\r\n        }\r\n        target = null;\r\n    }\r\n\r\n    const handleMouseDown = (e: React.MouseEvent) => {\r\n        e.stopPropagation();\r\n        unfocusAll();\r\n        window.addEventListener('mousemove', handleMouseMove);\r\n        window.addEventListener('mouseup', handleMouseUp);\r\n        const item = e.target as HTMLDivElement;\r\n        if (item) {\r\n            const bounds = item.getBoundingClientRect();\r\n            oldCoords.x = e.clientX;\r\n            oldCoords.y = e.clientY;\r\n            delta.x = oldCoords.x - bounds.x;\r\n            delta.y = oldCoords.y - bounds.y;\r\n            tempIndex = getMaxLayer(figures);\r\n            const figure = findFigure(figures, item.id);\r\n            figure.layer = tempIndex;\r\n            figure.isActive = true;\r\n            dispatch(changeFigure(figure));\r\n            item.style.zIndex = `${CONSTS.UPPER_LAYER}`;\r\n            if (!target) target = item;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className={styles.canvas} onMouseDown={unfocusAll}>\r\n            {items}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Canvas;","import React from 'react';\nimport './styles/app.scss';\nimport Field from \"./components/Field/Field\";\nimport Canvas from \"./components/Canvas/Canvas\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Field/>\n      <Canvas/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n        process.env.PUBLIC_URL || \"\",\n        window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === \"installed\") {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                    \"New content is available and will be used when all \" +\n                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log(\"Content is cached for offline use.\");\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error(\"Error during service worker registration:\", error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get(\"content-type\");\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf(\"javascript\") === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n            \"No internet connection found. App is running in offline mode.\"\n        );\n      });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {configureStore} from \"./store/store\";\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}